version: 2

references:

  ## Cache

  cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle
        - ~/.m2

  ## Workspace

  workspace: &workspace
    ~/workspace
  attach_debug_workspace: &attach_debug_workspace
    attach_workspace:
      at: *workspace
  attach_release_workspace: &attach_release_workspace
    attach_workspace:
      at: *workspace
  persist_debug_workspace: &persist_debug_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build/intermediates
        - app/build/outputs/androidTest-results
        - app/build/outputs/apk
        - app/build/outputs/code-coverage
        - app/build/test-results
  persist_release_workspace: &persist_release_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build

  ## Docker image configurations

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'
  gcloud_config: &gcloud_config
    working_directory: *workspace
    docker:
      - image: google/cloud-sdk:latest
    environment:
      TERM: dumb

## Keys

  # Android signing key

  decode_signing_key: &decode_signing_key
    run:
      name: Decode Android key store
      command: echo $SIGNING_KEY | base64 -di > $PUB_KEY_PATH

  # Googple Play service key

  decode_service_key: &decode_service_key
    run:
      name: Decode Android key store
      command: echo $ACCOUNT_KEY | base64 -di > $KEY_SERVICE_ACC
 
jobs:

  ## Build debug APK and instrumented test APK

  build_debug:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache     
      - run:
          name: Gradle build (debug)
          command: ./gradlew -PciBuild=true :app:assembleDebug :app:assembleAndroidTest
      - *persist_debug_workspace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/

  ## Build release APK

  build_release:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *decode_signing_key
      - run:
          name: Export path
          command: export PUB_KEY_PATH=@PWD/PUB_KEY_PATH >> $BASH_ENV
      - run:
          name: Check path
          command: echo $PUB_KEY_PATH
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache      
      - run:
          name: Gradle build (release)
          command: ./gradlew -PciBuild=true :app:assembleRelease
      - *persist_release_workspace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/
      - store_artifacts:
          path: app/build/outputs/mapping/
          destination: /mapping/  

  ## Run unit tests

  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Run unit tests
          command: ./gradlew -PciBuild=true :app:testDebugUnitTest
      - *persist_debug_workspace
      - store_artifacts:
          path: app/build/reports/
          destination: /reports/
      - store_test_results:
          path: app/build/test-results/
          destination: /test-results/

  ## Deploy release APK to Google Play Alpha

  deploy:
    <<: *android_config
    steps:
      - checkout
      - *attach_release_workspace
      - *decode_service_key
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - run:
          name: Deploy to Fabric Beta
          command: ./gradlew publishRelease
  
workflows:
  version: 2
  workflow:
    jobs:
    - build_debug
    - build_release
    - test_unit:
        requires:
          - build_debug    
    - deploy:
        filters:
          branches:
            only:
              - master
        requires:
          - build_release
          - test_unit          
